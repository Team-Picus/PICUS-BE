spring:
  datasource:
    username: ${USERNAME}
    url: ${URL}
    password: ${password}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      host: localhost
      port: 6379
  batch:
    job:
      enabled: false
    jdbc:
      isolation-level-for-create: READ_COMMITTED
      initialize-schema: always
      table-prefix: BATCH_

  jpa:
    hibernate:
      ddl-auto: update
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect


  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            scope: profile_nickname

        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  threads:
    virtual:
      enabled: true

  rabbitmq:
    host: localhost
    port: 5672
    username: guest
    password: guest

rabbitmq:
  chat-queue:
    name: "chat.queue" # 사용할 Queue 이름 지정
  chat-exchange:
    name: "chat.exchange" # 사용할 exchange 이름 (구독할 때 사용)
  chat-routing:
    key: "chat.room.*" # routing-key. chat.room.{room_id}를 구독

app:
  auth:
    tokenSecret: ${APP_TOKEN_SECRET}
    tokenExpiry: 1800000
    refreshTokenExpiry: 604800000
  oauth2:
    authorizedRedirectUris:

jwt:
  secret: ${JWT_SECRET}

cors:
  allowed-origins: "*"  # 모든 Origin 허용
  allowed-methods: "GET,POST,PUT,DELETE,OPTIONS"
  allowed-headers: "*"  # 모든 헤더 허용
  max-age: 3600